// <auto-generated/>
using MediatR;
using Microsoft.AspNetCore.Mvc;

namespace Test // TODO: set the namespace to generated project's namespace
{
    [Route("[controller]")]
    public sealed class {{ name }} : Controller
    {
        private readonly IMediator _mediator;

        public {{ name }}(IMediator mediator)
        {
            _mediator = mediator;
        }

        {%- for endpoint in endpoints %}

        [Http{{ endpoint.operation_name }}("{{ endpoint.path }}")]
        public async Task<ActionResult> {{ endpoint.name }}(
            {%- for parameter in endpoint.all_request_parameters -%}
                {{ parameter.attribute }}{{ parameter.data_type }} {{ parameter.parameter_name }}{%- unless forloop.last  %}, {% endunless -%}
            {%- endfor -%})
        {
            var request = new {{ endpoint.mediator_request_name }}();
            var response = await _mediator.Send(request); // TODO: optionally use a CancellationToken
            return Ok(response); // TODO: send mediatr and respond
        }
        {%- endfor %}
    }
}